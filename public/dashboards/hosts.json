{
  "hosts": [
    {
      "host": "Debian",
      "icon": "iconfont fa-debian",
      "info": "",
      "version": "暂无要求",
      "addr": "Debian"
    },
    {
      "host": "Ubuntu",
      "icon": "iconfont fa-ubuntu",
      "info": "",
      "version": "> 14.04",
      "addr": "Ubuntu"
    },
    {
      "host": "CentOS/RedHat",
      "icon": "iconfont fa-centos",
      "info": "",
      "version": "> 6.4",
      "addr": "RedHat"
    },
    {
      "host": "Fedora",
      "icon": "iconfont fa-Fedora",
      "info": "",
      "version": "暂无要求",
      "addr": "RedHat"
    }
  ],
  "service": [
    {
      "id": "hadoop.datanode",
      "name": "Hadoop DataNode",
      "icon": "iconfont fa-hadoop29",
      "img": "img/service_hadoop.png",
      "info": "Hadoop是一个能够对大量数据进行分布式处理的软件框架。 Hadoop 以一种可靠、高效、可伸缩的方式进行数据处理。",
      "deploy": [
        "路径：/opt/cloudwiz-agent/agent/collectors/conf/hadoop_data_node.conf",
        "Interval: 15"
      ],
      "metrics": [
        {
          "name": "hadoop.datanode.fsdatasetstate-null.Remaining",
          "define": "datanode 文件系统剩余的容量",
          "unit": "bytes",
          "type": "number",
          "alert": ""
        },
        {
          "name": "hadoop.datanode.activity.VolumeFailures",
          "define": "单个磁盘簇出错导致服务异常的次数",
          "unit": "short",
          "type": "number",
          "alert": ""
        },
        {
          "name": "hadoop.datanode.activity.BlocksRead",
          "define": "从硬盘读块的次数",
          "unit": "short",
          "type": "counter",
          "alert": ""
        }
      ],
      "status": -1,
      "template": "hadoop"
    },
    {
      "id": "hadoop.namenode",
      "name": "Hadoop NameNode",
      "icon": "iconfont fa-icon",
      "img": "img/service_hadoop.png",
      "info": "Hadoop是一个能够对大量数据进行分布式处理的软件框架。 Hadoop 以一种可靠、高效、可伸缩的方式进行数据处理。",
      "deploy": [
        "路径：/opt/cloudwiz-agent/agent/collectors/conf/hadoop_name_node.conf",
        "Interval：90"
      ],
      "metrics": [
        {
          "name": "hadoop.namenode.fsnamesystem.CapacityRemaining",
          "define": "HDFS文件系统剩余的容量",
          "unit": "bytes",
          "type": "number",
          "alert": ""
        },
        {
          "name": "hadoop.namenode.fsnamesystem.CapacityRemainingGB",
          "define": "HDFS文件系统剩余的容量(单位GB)",
          "unit": "gigabytes",
          "type": "number",
          "alert": ""
        },
        {
          "name": "hadoop.namenode.fsnamesystem.CapacityTotal",
          "define": "HDFS文件系统总体容量",
          "unit": "bytes",
          "type": "number",
          "alert": ""
        }
      ],
      "status": -1,
      "template": "hadoop"
    },
    {
      "id": "hbase.master",
      "name": "Hbase Master",
      "icon": "iconfont fa-hbase",
      "img": "img/service_hbase.png",
      "info": "HBase – Hadoop Database，是一个高可靠性、高性能、面向列、可伸缩的分布式存储系统，利用HBase技术可在廉价PC Server上搭建起大规模结构化存储集群。",
      "deploy": [
        "路径： /opt/cloudwiz-agent/agent/collectors/conf/hbase_master.conf",
        "Interval: 90",
        "Port : 16010"
      ],
      "metrics": [
        {
          "name": "hbase.master.server.numRegionServers",
          "define": "regionserver 存活数量",
          "unit": "short",
          "type": "number",
          "alert": ""
        },
        {
          "name": "hbase.master.server.numDeadRegionServers",
          "define": "regionserver 不存活数量",
          "unit": "short",
          "type": "number",
          "alert": ""
        },
        {
          "name": "hbase.master.ipc.numOpenConnections",
          "define": "与master 连接数量",
          "unit": "short",
          "type": "number",
          "alert": ""
        }
      ],
      "status": -1,
      "template": "hbase"
    },
    {
      "id": "hbase.regionserver",
      "name": "Hbase RegionServer",
      "icon": "iconfont fa-hbase",
      "img": "img/service_hbase.png",
      "info": "HBase – Hadoop Database，是一个高可靠性、高性能、面向列、可伸缩的分布式存储系统，利用HBase技术可在廉价PC Server上搭建起大规模结构化存储集群。",
      "deploy": [
        "路径：/opt/cloudwiz-agent/agent/collectors/conf/hbase_regionserver.conf",
        "Interval: 15",
        "Port : 16030"
      ],
      "metrics": [
        {
          "name": "hbase.regionserver.server.regionCount",
          "define": "region 的总数",
          "unit": "short",
          "type": "number",
          "alert": ""
        },
        {
          "name": "hbase.regionserver.server.readRequestCount",
          "define": "regionserver读请求的数量",
          "unit": "short",
          "type": "number",
          "alert": ""
        },
        {
          "name": "hbase.regionserver.server.writeRequestCount",
          "define": "regionserver写请求的数量",
          "unit": "short",
          "type": "counter",
          "alert": ""
        }
      ],
      "status": -1,
      "template": "hbase"
    },
    {
      "id": "kafka",
      "name": "Kafka",
      "icon": "iconfont fa-kafka",
      "img": "",
      "info": "Kafka是一种高吞吐量的分布式发布订阅消息系统，它可以处理消费者规模的网站中的所有动作流数据。",
      "deploy": [
        "路径：/opt/cloudwiz-agent/agent/collectors/conf/kafka.conf",
        "Interval：15",
        " ",
        "路径：/opt/cloudwiz-agent/agent/collectors/conf/kafka_consumers.conf",
        "Process_name: AppMain (指consumer 的名称，可以通过逗号加入多个）",
        "Port：7777"
      ],
      "metrics": [
        {
          "name": "kafka.bytesrate.BytesInPerSec.Count",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        },
        {
          "name": "kafka.bytesrate.BytesInPerSec.FifteenMinuteRate",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        },
        {
          "name": "kafka.bytesrate.BytesInPerSec.FiveMinuteRate",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        }
      ],
      "status": -1,
      "template": "kafka"
    },
    {
      "id": "mysql",
      "name": "Mysql",
      "icon": "iconfont fa-mysql",
      "img": "",
      "info": "MySQL是一个关系型数据库管理系统，其特点为体积小、速度快、总体拥有成本低，且开放源码。",
      "deploy": [
        "安装mysql之前请先执行一下命令：",
        "bash -c \"$(curl -kL https://download.cloudwiz.cn/agent/mysql/deploy.sh)\"",
        "(注意, 这里需要获取您的root账号密码)",
        "路径:  /opt/cloudwiz-agent/agent/collectors/conf/mysql.conf",
        "User: cloudwiz_user",
        "Pass: cloudwiz_pass"
      ],
      "metrics": [
        {
          "name": "mysql.connection_states",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        },
        {
          "name": "mysql.innodb.history_list_length",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        },
        {
          "name": "mysql.innodb.ibuf.free_list_len",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        }
      ],
      "status": -1,
      "template": "mysql"
    },
    {
      "id": "spark",
      "name": "Spark",
      "icon": "iconfont fa-spark1",
      "img": "",
      "info": "Apache Spark 是专为大规模数据处理而设计的快速通用的计算引擎。",
      "deploy": [
        "路径：/opt/cloudwiz-agent/agent/collectors/conf/spark.conf",
        "Interval:60",
        "Spark_host: localhost",
        "Spark_port: 8080",
        "Spark_cluster_mode: <spark_standalone_mode,",
        "spark_yarn_mode,",
        "spark_mesos_mode >"
      ],
      "metrics": [
        {
          "name": "spark.executor.activeTasks",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        },
        {
          "name": "spark.executor.completedTasks",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        },
        {
          "name": "spark.executor.count",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        }
      ],
      "status": -1,
      "template": "spark"
    },
    {
      "id": "storm",
      "name": "Storm",
      "icon": "iconfont fa-ApacheStorm",
      "img": "",
      "info": "Storm为分布式实时计算提供了一组通用原语，可被用于“流处理”之中，实时处理消息并更新数据库。这是管理队列及工作者集群的另一种方式。",
      "deploy": [
        "路径：/opt/cloudwiz-agent/agent/collectors/conf/storm.conf",
        "Interval: 30",
        "Host: localhost",
        "Port : 8080"
      ],
      "metrics": [
        {
          "name": "storm.cluster.executorsTotal",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        },
        {
          "name": "storm.cluster.slotsFree",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        },
        {
          "name": "storm.cluster.slotsTotal",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        }
      ],
      "status": -1,
      "template": "storm"
    },
    {
      "id": "yarn",
      "name": "Yarn",
      "icon": "iconfont fa-yarn",
      "img": "",
      "info": "Apache Hadoop YARN （Yet Another Resource Negotiator，另一种资源协调者）是一种新的 Hadoop 资源管理器，它是一个通用资源管理系统，可为上层应用提供统一的资源管理和调度。",
      "deploy": [
        "路径：/opt/cloudwiz-agent/agent/collectors/conf/yarn.conf",
        "Interval: 30",
        "Host:localhost",
        "Port : 8088"
      ],
      "metrics": [
        {
          "name": "yarn.apps.allocatedMB",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        },
        {
          "name": "yarn.apps.allocatedVCores",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        },
        {
          "name": "yarn.apps.elapsedTime",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        }
      ],
      "status": -1,
      "template": "yarn_mapreduce",
      "alertDef": []
    },
    {
      "id": "zookeeper",
      "name": "Zookeeper",
      "icon": "iconfont fa-zookeeper",
      "img": "img/service_zookeeper.png",
      "info": "ZooKeeper是一个分布式的，开放源码的分布式应用程序协调服务，是Google的Chubby一个开源的实现，是Hadoop和Hbase的重要组件。",
      "deploy": [
        "路径：/opt/cloudwiz-agent/agent/collectors/conf/zookeeper.conf",
        "SCAN_INTERVAL: 600",
        "USER: root"
      ],
      "metrics": [
        {
          "name": "zk_approximate_data_size",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        },
        {
          "name": "zk_avg_latency",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        },
        {
          "name": "zk_ephemerals_count",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        }
      ],
      "status": -1,
      "template": "zookeeper"
    },
    {
      "id": "tomcat",
      "name": "Tomcat",
      "icon": "iconfont fa-tomcat",
      "img": "img/service_tomcat.png",
      "info": "Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。使用 JMX 插件来获取内部的指标，支持多个端口号的配置。",
      "deploy": [
        "路径：/opt/cloudwiz-agent/agent/collectors/conf/tomcat.conf",
        "Interval: 60",
        "Protocol: http",
        "Ports: 8080, 8081  (支持一台机器多个端口号的设置 用逗号来分割)"
      ],
      "metrics": [
        {
          "name": "tomcat.jsp.jspCount",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        },
        {
          "name": "tomcat.jsp.jspQueueLength",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        },
        {
          "name": "tomcat.jsp.jspReloadCount",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        }
      ],
      "status": -1,
      "template": "tomcat"
    },
    {
      "id": "opentsdb",
      "name": "OpenTSDB",
      "icon": "iconfont fa-zanwutu",
      "img": "img/service_opentsdb.png",
      "info": "开源监控系统OpenTSDB，用hbase存储所有的时序（无须 采样）来构建一个分布式、可伸缩的时间序列数据库。",
      "deploy": "",
      "metrics": [],
      "status": -1,
      "template": "opentsdb"
    },
    {
      "id": "mongo3",
      "name": "MongoDB 3.x",
      "icon": "iconfont fa-mongo-db1",
      "img": "img/service_mongo.png",
      "info": "MongoDB是一个基于分布式文件存储的数据库，由C++语言编写，旨在为WEB应用提供可扩展的高性能数据存储解决方案。",
      "deploy": [
        "安装依赖:",
        "<p class='code-block'> 1. 进入/tmp目录</p>",
        "<p class='code-block indent2'> $ cd /tmp</p>",
        "<p class='code-block'> 2. 下载对应的依赖包</p>",
        "<p class='code-block indent2'> $ wget https://download.cloudwiz.cn/package/pymongo-3.4.0.tar.gz</p>",
        "<p class='code-block'> 3. 将依赖包解压并进入安装包</p>",
        "<p class='code-block'> 4. 运行</p>",
        "<p class='code-block indent2'> $ /opt/cloudwiz-agent/altenv/bin/python setup.py install --prefix=/opt/cloudwiz-agent/altenv/</p>",

        "配置:",
        "<p class='code-block'> 1. 进入文件并修改</p>",
        "<p class='code-block indent2'> $ vim /opt/cloudwiz-agent/agent/collectors/conf/mongo3.conf</p>",
        "<p class='code-block'> 2. 修改配置文件</p>",
        "<p class='code-block indent2'>interval = 30</p>",
        "<p class='code-block indent2'> db = []</p>",
        "<p class='code-block indent2'> config = ['192.168.1.206:27017']</p>",
        "<p class='code-block indent2'> mongos = []</p>",
        "<p class='code-block indent2'> replica = []</p>",
        "<p class='code-block indent2'> username = </p>",
        "<p class='code-block indent2'> password = </p>",
        " ",
        "注意username 和password 默认是字符串, 不需要加入 “ 或 ‘"
      ],
      "metrics": [
        {
          "name": "mongo.asserts.msg",
          "define": "asserts出现的次数",
          "unit": "short",
          "type": "number",
          "alert": ""
        },
        {
          "name": "mongo.asserts.regular",
          "define": "有规律的asserts出现的次数",
          "unit": "short",
          "type": "number",
          "alert": ""
        },
        {
          "name": "mongo.asserts.rollovers",
          "define": "Number of times that the rollover counters roll over per second. The counters rollover to zero every 2 to the 30 assertions.",
          "unit": "short",
          "type": "number",
          "alert": ""
        }
      ],
      "status": -1,
      "template": "mongodb"
    },
    {
      "id": "nginx",
      "name": "Nginx",
      "icon": "iconfont fa-image-icon_nginx",
      "img": "img/service_nginx.png",
      "info": "Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，并在一个BSD-like 协议下发行。",
      "msg": [
        "nginx 探针的实现主要是依赖 nginx_status api 接口, 可以nginx 配置来实现.",
        "访问 http://localhost:80/nginx_status 即可测试"
      ],
      "deploy": [
        "路径：/opt/cloudwiz-agent/agent/collectors/conf/nginx.conf",
        "host = localhost",
        "port = 80",
        "is_enable_https =  #是否启用https",
        "uri = /nginx_status   #默认是访问http://localhost:80/nginx_status 如有需要自行修改."
      ],
      "metrics": [
        {
          "name": "nginx.active_connections",
          "define": "已经连接上nginx server 的连接数(包括正在等待的链接)",
          "unit": "short",
          "type": "number",
          "alert": ""
        },
        {
          "name": "nginx.exception",
          "define": "",
          "unit": "",
          "type": "",
          "alert": ""
        },
        {
          "name": "nginx.number_requests_reading",
          "define": "客户端读请求数量",
          "unit": "short",
          "type": "number",
          "alert": ""
        }
      ],
      "status": -1,
      "template": "nginx"
    },
    {
      "id": "postgresql",
      "name": "Postgresql",
      "icon": "iconfont fa-postgresql",
      "img": "",
      "info": "PostgreSQL 是一个自由的对象-关系数据库服务器(数据库管理系统)，它在灵活的 BSD-风格许可证下发行。",
      "deploy": [
        "下载依赖包:",
        "<p class='code-block'> wget https://download.cloudwiz.cn/package/psycopg2-2.6.1.tar.gz</p>",
        "<p class='code-block'> wget https://download.cloudwiz.cn/package/libpq-dev.tar.gz</p>",
        "安装模块包和依赖包:",
        "<p class='code-block'> 1. 将安装包放到 /tmp 目录下,并解压</p>",
        "<p class='code-block'> 2. 进入libpq解压包</p>",
        "<p class='code-block indent2'> $ cd /tmp/libpq-dev</p>",
        "<p class='code-block'> 3. 安装依赖</p>",
        "<p class='code-block indent2'> $ rpm -ivh /tmp/libpq-dev/*.rpm</p>",
        "<p class='code-block'> 4. 检查是否配置好环境变量</p>",
        "<p class='code-block indent2'> $ which pg_config</p>",
        "<p class='code-block indent2'> 若没有,请配置环境变量.如: </p>",
        "<p class='code-block indent2'> $ export PATH=/usr/pgsql-9.3/bin:$PATH</p>",
        "<p class='code-block'> 5. 安装模块包</p>",
        "<p class='code-block indent2'> $ cd /tmp/psycopg2-2.6.1</p>",
        "<p class='code-block indent2'> #执行 </p>",
        "<p class='code-block indent2'> $ /opt/cloudwiz-agent/altenv/bin/python setup.py install --prefix=\"/opt/cloudwiz-agent/altenv\"</p>",
        "<p class='code-block'> 6. 若没有出现任何error,则证明成功安装</p>",
        "加入用户:",
        "<p class='code-block'> 1. 我们的探针需要用户给我们设置一个专门能够收集数据的账号(只读)</p>",
        "<p class='code-block'> 2. 进去psql运行</p>",
        "<p class='code-block'> 3. create user cloudwiz_user with password 'cloudwiz_pass';</p>",
        "<p class='code-block'> 4. grant SELECT ON pg_stat_database to cloudwiz_user;</p>",
        "<p class='code-block'> 5. 检查是否能够访问 psql -h localhost -U cloudwiz_user postgres -c \"select * from pg_stat_database LIMIT(1);\"</p>",
        "<p class='code-block'> 6. 如果出现任何问题,请联系管理员</p>"
      ],
      "metrics": [],
      "status": -1,
      "template": "postgresql"
    },{
      "id": "redis",
      "name": "Redis",
      "icon": "iconfont fa-redis",
      "img": "",
      "info": "redis是一个开源的、使用C语言编写的、支持网络交互的、可基于内存也可持久化的Key-Value数据库。",
      "deploy": [
        "路径：/opt/cloudwiz-agent/agent/collectors/conf/redisdb.conf",
        "#是否开启collector",
        "enabled = False",
        "#收集redis metrics频率 单位s",
        "interval = 30",
        "#redis地址",
        "host = 127.0.0.1",
        "#redis port",
        "port = 6379"
      ],
      "metrics": [],
      "status": -1,
      "template": "redis"
    },{
      "id": "rabbitmq",
      "name": "RabbitMQ",
      "icon": "iconfont fa-rabbitmq",
      "img": "",
      "info": "RabbitMQ是流行的开源消息队列系统，用erlang语言开发。RabbitMQ是AMQP（高级消息队列协议）的标准实现。",
      "deploy": [
        "路径：/opt/cloudwiz-agent/agent/collectors/conf/rabbit_mq.conf",
        "# localhost可改为RabbitMQ的host地址",
        "rabbitmq_api_url = http://localhost:15672/api/",
        "rabbitmq_user = guest",
        "rabbitmq_pass = guest",
        "#queues = 'queue1'",
        "#nodes = 'node1','node2'"
      ],
      "metrics": [
        {
          "name": "rabbitmq.node.fd_used",
          "define": "已使用的File Descriptors",
          "unit": "short",
          "type": "number",
          "alert": ""
        },
        {
          "name": "rabbitmq.node.mem_used",
          "define": "占用内存大小",
          "unit": "short",
          "type": "number",
          "alert": ""
        },
        {
          "name": "rabbitmq.node.run_queue",
          "define": "等待运行的Erlang进程平均数量",
          "unit": "short",
          "type": "number",
          "alert": ""
        }
      ],
      "status": -1,
      "template": "rabbitmq"
    },{
      "id": "oracle",
      "name": "Oracle",
      "icon": "iconfont fa-oracle",
      "img": "",
      "info": "ORACLE数据库系统是美国ORACLE公司（甲骨文）提供的以分布式数据库为核心的一组软件产品，是目前最流行的客户/服务器(CLIENT/SERVER)或B/S体系结构的数据库之一。",
      "deploy": [
        "1. 安装探针",
        "2. 安装服务依赖",
        "<p class='code-block'> 1. 安装client.</p>",
        "<p class='code-block indent2'> 主要是下载rmp包. 然后直接安装.(理论上这里没有任何其他的dep,所以可以直接安装 http://www.oracle.com/technetwork/topics/linuxx86-64soft-092277.html)</p>",
        "<p class='code-block'> 2. 安装python中oracle依赖.</p>",
        "<p class='code-block'> 3. 安装cx_oracle的依赖包</p>",
        "<p class='code-block indent2'> 这里 https://pypi.python.org/pypi/cx_Oracle/ 下载, 然后直接setup.py install</p>",
        "<p class='code-block'> 4. 校验是否加入成功</p>",
        "<p class='code-block indent2'> $ 1. /opt/cloudwiz-agent/altenv/bin/python</p>",
        "<p class='code-block indent2'> $ 2. import cx_Oracle</p>",
        "3. 导入环境变量",
        "<p class='code-block'> $ 1. export ORACLE_HOME=/usr/lib/oracle/11.2 </p>",
        "<p class='code-block'> $ 2. export LD_LIBRARY_PATH=$ORACLE_HOME/client64/lib </p>",
        "<p class='code-block'> $ 3. export PATH=$PATH:$HOME/bin:/sbin:$ORACLE_HOME/client64/bin</p>",
        "4. 创建用户(https://github.com/bicofino/Pyora)",
        "<p class='code-block'> CREATE USER cloudwiz IDENTIFIED BY DEFAULT TABLESPACE SYSTEM TEMPORARY TABLESPACE TEMP PROFILE DEFAULT ACCOUNT UNLOCK;</p>",
        "<p class='code-block'> GRANT CONNECT TO cloudwiz;</p>",
        "<p class='code-block'> GRANT RESOURCE TO cloudwiz;</p>",
        "<p class='code-block'> ALTER USER cloudwiz DEFAULT ROLE ALL;</p>",
        "<p class='code-block'> GRANT SELECT ANY TABLE TO cloudwiz;</p>",
        "<p class='code-block'> GRANT CREATE SESSION TO cloudwiz;</p>",
        "<p class='code-block'> GRANT SELECT ANY DICTIONARY TO cloudwiz;</p>",
        "<p class='code-block'> GRANT UNLIMITED TABLESPACE TO cloudwiz;</p>",
        "<p class='code-block'> GRANT SELECT ANY DICTIONARY TO cloudwiz;</p>",
        "<p class='code-block'> GRANT SELECT ON V_$SESSION TO cloudwiz;</p>",
        "<p class='code-block'> GRANT SELECT ON V_$SYSTEM_EVENT TO cloudwiz;</p>",
        "<p class='code-block'> GRANT SELECT ON V_$EVENT_NAME TO cloudwiz;</p>",
        "<p class='code-block'> GRANT SELECT ON V_$RECOVERY_FILE_DEST TO cloudwiz;</p>",
        "5. 修改 /opt/cloudwiz-agent/agent/collectors/conf/oracle.conf",
        "<p class='code-block'> base 部分:</p>",
        "<p class='code-block indent2'> enabled: #是否启动</p>",
        "<p class='code-block indent2'> interval: #间隔时间</p>",
        "<p class='code-block indent2'> host: #目标hostname</p>",
        "<p class='code-block indent2'> port: #目标hostname port</p>",
        "<p class='code-block indent2'> username: #oracle username</p>",
        "<p class='code-block indent2'> password: #oracle password</p>",
        "<p class='code-block indent2'> database: #oracle database</p>",
        "<p class='code-block'> sql 查询部分:</p>",
        "<p class='code-block indent2'> 用键值对的方式来标识.值是sql语句,键是通过 metrics|value的形式组成,通过 | 进行分割. 例子如下:</p>",
        "<p class='code-block indent2'> dbfilesize|val = select to_char(sum(bytes), 'FM99999999999999990') retvalue from dba_data_files</p>",
        "<p class='code-block'> 自定义部分:</p>",
        "<p class='code-block indent2'> 加入了自定义的tag部分.与 sql 返回的值一一对应.例子如下:</p>",
        "<p class='code-block indent2'> slow.query|val|elapsed_time|cmd = select * from (select disk_reads, elapsed_time, sql_text from v$sqlarea order by elapsed_time desc) where rownum< 3</p>"
      ],
      "metrics": [],
      "status": -1,
      "template": ""
    },{
      "id": "weblogic",
      "name": "WebLogic",
      "icon": "iconfont fa-weblogic",
      "img": "",
      "info": "WebLogic是美国Oracle公司出品的一个application server，确切的说是一个基于JAVAEE架构的中间件，WebLogic是用于开发、集成、部署和管理大型分布式Web应用、网络应用和数据库应用的Java应用服务器。",
      "deploy": [
        "修改配置文件:",
        "<p class='code-block'> enable: #是否启动 </p>",
        "<p class='code-block'> interval: #时间间隔</p>",
        "<p class='code-block'> process_name: #数组对象</p>",
        "<p class='code-block indent2'> # process 能够在ps中唯一标识的部分.</p>",
        "<p class='code-block indent2'> # name 任意值.标识这台机器的名字</p>",
        "<p class='code-block indent2'> # port jolokia 会占用一个端口来使用.</p>"
      ],
      "metrics": [],
      "status": -1,
      "template": ""
    }
  ]
}